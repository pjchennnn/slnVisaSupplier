am5.ready(function () { var e = am5.Root.new("chartdiv"); e.setThemes([am5themes_Animated.new(e)]); var t = e.container.children.push(am5map.MapChart.new(e, { panX: "rotateX", panY: "translateY", projection: am5map.geoNaturalEarth1(), rotationX: -5 })), a = t.series.push(am5map.MapPolygonSeries.new(e, { geoJSON: am5geodata_worldLow, geodataNames: am5geodata_lang_tw_ZH })), o = am5.ColorSet.new(e, {}), n = 0; a.mapPolygons.template.adapters.add("fill", function (e, t) { n < 10 ? n++ : n = 0; var a = t.dataItem.dataContext; if (a.colorWasSet) return e; a.colorWasSet = !0; var l = am5.Color.saturate(o.getIndex(6 * n), .38); return t.setRaw("fill", l), l }); var l = t.children.push(am5.Legend.new(e, { useDefaultMarker: !0, centerX: am5.p50, x: am5.p50, centerY: am5.p100, y: am5.p100, dy: -20, background: am5.RoundedRectangle.new(e, { fill: am5.color(16777215), fillOpacity: .2 }) })); l.valueLabels.template.set("forceHidden", !0); var r = am5.ColorSet.new(e, { step: 77 }); r.next(), a.mapPolygons.template.states.create("hover", { fillOpacity: 1 }), (async () => { let a = await getProductCount(); !0 === a ? am5.array.each(groupData, function (a) { var o = [], n = r.next(); am5.array.each(a.data, function (e) { o.push(e.id) }); var i = t.series.push(am5map.MapPolygonSeries.new(e, { geoJSON: am5geodata_worldLow, include: o, name: a.name, fill: n, fill: am5.Color.brighten(n, -.3) })); i.mapPolygons.template.setAll({ tooltipText: "{name}[/]\n{detail}", interactive: !0, fill: n, strokeWidth: .5 }), i.mapPolygons.template.states.create("hover", { fill: am5.Color.brighten(n, -.45) }), i.mapPolygons.template.events.on("click", e => { var t = e.target.dataItem.dataContext; console.log(t.name), console.log(t.detail) }), i.mapPolygons.template.events.on("pointerout", function (e) { e.target.series.mapPolygons.each(function (e) { e.states.applyAnimate("default") }) }), i.data.setAll(a.data), l.data.push(i) }) : console.log("!") })(), a.mapPolygons.template.setAll({ tooltipText: "{name}", fillOpacity: .8 }), a.mapPolygons.template.events.on("click", e => { var t = e.target.dataItem.dataContext; console.log(t.name), console.log(t.detail) }), t.series.push(am5map.GraticuleSeries.new(e, {})).mapLines.template.setAll({ stroke: e.interfaceColors.get("alternativeBackground"), strokeOpacity: .04 }), t.set("zoomControl", am5map.ZoomControl.new(e, {})), t.chartContainer.get("background").events.on("click", function () { t.goHome() }); var i = t.series.unshift(am5map.MapPolygonSeries.new(e, {})); i.mapPolygons.template.setAll({ fill: am5.color(15595514), stroke: am5.color(15595514) }), i.data.push({ geometry: am5map.getGeoRectangle(90, 180, -90, -180) }); var p = t.children.push(am5.Container.new(e, { x: am5.p100, dx: -13, centerX: am5.p100, y: am5.p100, dy: -110, centerY: am5.p100, layout: e.verticalLayout, paddingTop: 0, paddingRight: 0, paddingBottom: 0, paddingLeft: 0, background: am5.RoundedRectangle.new(e, { fill: am5.color(16777215), fillOpacity: .3 }) })); function s(a, o, n, l) { p.children.push(am5.Button.new(e, { paddingTop: 0, paddingRight: 0, paddingBottom: 0, paddingLeft: 0, marginTop: 3, marginLeft: 5, marginRight: 5, label: am5.Label.new(e, { text: a }) })).events.on("click", function () { t.setAll({ projection: o, panY: n, rotationY: l }), t.goHome() }) } s("1", am5map.geoNaturalEarth1(), "translateY", 0), s("2", am5map.geoMercator(), "none", 0), s("3", am5map.geoEquirectangular(), "none", 0), s("4", am5map.geoOrthographic(), "rotateY", 0), t.appear(1e3, 100) });