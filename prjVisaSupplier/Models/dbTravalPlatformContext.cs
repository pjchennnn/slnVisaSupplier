// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace prjVisaSupplier.Models;

public partial class dbTravalPlatformContext : DbContext
{
    public dbTravalPlatformContext(DbContextOptions<dbTravalPlatformContext> options)
        : base(options)
    {
    }

    public virtual DbSet<TCcompanyInfo> TCcompanyInfos { get; set; }

    public virtual DbSet<TCouponList> TCouponLists { get; set; }

    public virtual DbSet<TCustomer> TCustomers { get; set; }

    public virtual DbSet<TVcountry> TVcountries { get; set; }

    public virtual DbSet<TVformPath> TVformPaths { get; set; }

    public virtual DbSet<TVlengthOfStay> TVlengthOfStays { get; set; }

    public virtual DbSet<TVorder> TVorders { get; set; }

    public virtual DbSet<TVorderStatus> TVorderStatuses { get; set; }

    public virtual DbSet<TVprocessingTime> TVprocessingTimes { get; set; }

    public virtual DbSet<TVproduct> TVproducts { get; set; }

    public virtual DbSet<TVproductFormsRequired> TVproductFormsRequireds { get; set; }

    public virtual DbSet<TVtravelerInfo> TVtravelerInfos { get; set; }

    public virtual DbSet<TVvalidityPeriod> TVvalidityPeriods { get; set; }

    public virtual DbSet<VVorderView> VVorderViews { get; set; }

    public virtual DbSet<VVproductView> VVproductViews { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<TCcompanyInfo>(entity =>
        {
            entity.HasKey(e => e.FId).HasName("PK_廠商基本資料");
        });

        modelBuilder.Entity<TCouponList>(entity =>
        {
            entity.Property(e => e.FEnable).HasDefaultValueSql("((1))");
        });

        modelBuilder.Entity<TVcountry>(entity =>
        {
            entity.HasKey(e => e.FId).HasName("PK_旅遊代辦國家總表");
        });

        modelBuilder.Entity<TVformPath>(entity =>
        {
            entity.HasKey(e => e.FId).HasName("PK_旅遊代辦申請資料");
        });

        modelBuilder.Entity<TVlengthOfStay>(entity =>
        {
            entity.HasKey(e => e.FId).HasName("PK_旅遊代辦可停留天數總表");
        });

        modelBuilder.Entity<TVorder>(entity =>
        {
            entity.HasKey(e => e.FId).HasName("PK_旅遊代辦訂單資料");

            entity.Property(e => e.FOrderId).HasDefaultValueSql("([dbo].[GetOrderID_V]())");

            entity.HasOne(d => d.FCoupon).WithMany(p => p.TVorders).HasConstraintName("FK_tVOrder_tCouponList");

            entity.HasOne(d => d.FCustomer).WithMany(p => p.TVorders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tVOrder_tCustomer");

            entity.HasOne(d => d.FProduct).WithMany(p => p.TVorders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_旅遊代辦訂單資料_旅遊代辦子商品資料");

            entity.HasOne(d => d.FStatus).WithMany(p => p.TVorders).HasConstraintName("FK_tVOrder_tVOrderStatus");
        });

        modelBuilder.Entity<TVprocessingTime>(entity =>
        {
            entity.HasKey(e => e.FId).HasName("PK_旅遊代辦辦理耗時總表");
        });

        modelBuilder.Entity<TVproduct>(entity =>
        {
            entity.HasKey(e => e.FId).HasName("PK_旅遊代辦子商品資料");

            entity.HasOne(d => d.FCountry).WithMany(p => p.TVproducts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tVProduct_tVCountry");

            entity.HasOne(d => d.FLengthOfStay).WithMany(p => p.TVproducts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_旅遊代辦子商品資料_旅遊代辦可停留天數總表");

            entity.HasOne(d => d.FProcessingTime).WithMany(p => p.TVproducts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_旅遊代辦價目表_旅遊代辦辦理耗時總表");

            entity.HasOne(d => d.FSupplier).WithMany(p => p.TVproducts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tVProduct_廠商基本資料");

            entity.HasOne(d => d.FValidityPeriod).WithMany(p => p.TVproducts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_旅遊代辦價目表_旅遊代辦效期時間總表");
        });

        modelBuilder.Entity<TVproductFormsRequired>(entity =>
        {
            entity.HasOne(d => d.FForm).WithMany(p => p.TVproductFormsRequireds)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_旅遊代辦子商品所需申請資料_旅遊代辦申請資料");

            entity.HasOne(d => d.FProduct).WithMany(p => p.TVproductFormsRequireds)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_旅遊代辦子商品所需申請資料_旅遊代辦子商品資料");
        });

        modelBuilder.Entity<TVtravelerInfo>(entity =>
        {
            entity.HasKey(e => e.FId).HasName("PK_旅客資料");

            entity.HasOne(d => d.FOrder).WithMany(p => p.TVtravelerInfos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tVTravelerInfo_tVOrder1");
        });

        modelBuilder.Entity<TVvalidityPeriod>(entity =>
        {
            entity.HasKey(e => e.FId).HasName("PK_旅遊代辦效期時間總表");
        });

        modelBuilder.Entity<VVorderView>(entity =>
        {
            entity.ToView("vVOrderView");
        });

        modelBuilder.Entity<VVproductView>(entity =>
        {
            entity.ToView("vVProductView");
        });

        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}